import unittest
import transaction
import requests

from mock import patch, Mock, PropertyMock
from pyramid import testing

from .models import DBSession


class TestHomeView(unittest.TestCase):
    def setUp(self):
        self.config = testing.setUp()
        from sqlalchemy import create_engine
        engine = create_engine('sqlite://')
        from .models import (
            Base,
            MyModel,
            )
        DBSession.configure(bind=engine)
        Base.metadata.create_all(engine)
        with transaction.manager:
            model = MyModel(name='one', value=55)
            DBSession.add(model)

    def tearDown(self):
        DBSession.remove()
        testing.tearDown()

    @patch.object(requests, 'get')
    def test_image_request(self, mget):
	sample_image = '\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x01\x00`\x00`\x00\x00\xff\xdb\x00C\x00\x02\x01\x01\x02\x01\x01\x02\x02\x02\x02\x02\x02\x02\x02\x03\x05\x03\x03\x03\x03\x03\x06\x04\x04\x03\x05\x07\x06\x07\x07\x07\x06\x07\x07\x08\t\x0b\t\x08\x08\n\x08\x07\x07\n\r\n\n\x0b\x0c\x0c\x0c\x0c\x07\t\x0e\x0f\r\x0c\x0e\x0b\x0c\x0c\x0c\xff\xdb\x00C\x01\x02\x02\x02\x03\x03\x03\x06\x03\x03\x06\x0c\x08\x07\x08\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\xff\xc0\x00\x11\x08\x00\x0b\x00\x0b\x03\x01"\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1f\x00\x00\x01\x05\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\xff\xc4\x00\xb5\x10\x00\x02\x01\x03\x03\x02\x04\x03\x05\x05\x04\x04\x00\x00\x01}\x01\x02\x03\x00\x04\x11\x05\x12!1A\x06\x13Qa\x07"q\x142\x81\x91\xa1\x08#B\xb1\xc1\x15R\xd1\xf0$3br\x82\t\n\x16\x17\x18\x19\x1a%&\'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\x83\x84\x85\x86\x87\x88\x89\x8a\x92\x93\x94\x95\x96\x97\x98\x99\x9a\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xff\xc4\x00\x1f\x01\x00\x03\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\xff\xc4\x00\xb5\x11\x00\x02\x01\x02\x04\x04\x03\x04\x07\x05\x04\x04\x00\x01\x02w\x00\x01\x02\x03\x11\x04\x05!1\x06\x12AQ\x07aq\x13"2\x81\x08\x14B\x91\xa1\xb1\xc1\t#3R\xf0\x15br\xd1\n\x16$4\xe1%\xf1\x17\x18\x19\x1a&\'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x92\x93\x94\x95\x96\x97\x98\x99\x9a\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xfd@\xfd\xb7?n\x8dg\xe0\'\xedG\xe0\x9d\x0bH\x7f\x11\xaf\x87\xb4\x11i\xa9\xf8\xc9l\xbc\x1b\xa8j\xf67\x16w\xd7_dQq\x7fom,:p\xb5\x89.oY\xa6\x96\x1d\xe2\x18\xc6J\x16\x07\xeb\xca\xc5\xd6>\x1b\xf8{\xc4:n\xbdg\x7f\xa0\xe8\xb7\xd6~*\x88\xdb\xebP\\X\xc5,z\xc4f!\tK\x95e"e1\x01\x19\x0f\x91\xb0m\xe9\xc5k[[Gem\x1c0\xc6\x91C\x12\x84DE\n\xa8\xa0`\x00\x07\x00\x01D4\x87+\xde\xed\xdf\xd7\xa7\xcb\xa7\xf5rZ\xcf\x99md\xad\xe9\xd7\xe7\xad\xfbm\xb6\x8b\xff\xd9'
	mresponse = Mock()
	mresponse.return_value.iter_content.return_value = [sample_image]
	mresponse.return_value.headers = {'content-type': 'image/jpeg'}
	mget.return_value = mresponse.return_value
	
	from .views import HomeView
        request = testing.DummyRequest()
	view = HomeView(request)
        response = view.mirror()
        self.assertEqual(response.body, sample_image)
	self.assertEqual(response.content_type, 'image/jpeg')

    @patch.object(requests, 'get')
    def test_text_request(self, mget):
	sample_text = 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'
	mresponse = Mock()
	mresponse.return_value.iter_content.return_value = [sample_text]
	mresponse.return_value.headers = {'content-type': 'text/plain'}
	mget.return_value = mresponse.return_value

	from .views import HomeView
	request = testing.DummyRequest()
	view = HomeView(request)
	response = view.mirror()
	self.assertEqual(response.body, sample_text)
	self.assertEqual(response.content_type, 'text/plain')
